# -*- coding: utf-8 -*-
"""세 개의 가게 사이의 최단, 최장거리 구하기.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19qw33eHzwZTi_m6yqbw-UxzpT_GqMKUl
"""

import math

# 가게 위치 입력 받기
def input_store_locations():
    stores = []
    for i in range(3):
        store_name = input("가게 이름을 입력하세요: ")
        x = float(input("가게의 x 좌표를 입력하세요: "))
        y = float(input("가게의 y 좌표를 입력하세요: "))
        stores.append((store_name, x, y))
    return stores

# 두 점 사이의 유클리드 거리 계산
def euclidean_distance(point1, point2):
    return math.sqrt((point1[1] - point2[1])**2 + (point1[2] - point2[2])**2)

# 가장 가까운 두 개의 가게와 가장 먼 두 개의 가게 찾기
def find_closest_and_farthest(stores):
    min_distance = float('inf')
    max_distance = float('-inf')
    closest_stores = []
    farthest_stores = []

    for i in range(len(stores)):
        for j in range(i+1, len(stores)):
            distance = euclidean_distance(stores[i], stores[j])
            if distance < min_distance:
                min_distance = distance
                closest_stores = [stores[i][0], stores[j][0]]
            if distance > max_distance:
                max_distance = distance
                farthest_stores = [stores[i][0], stores[j][0]]

    return closest_stores, min_distance, farthest_stores, max_distance

# 메인 함수
def main():
    print("세 개의 가게 위치를 입력하세요.")
    stores = input_store_locations()
    closest_stores, min_distance, farthest_stores, max_distance = find_closest_and_farthest(stores)
    print("가장 가까운 두 개의 가게:", closest_stores, "거리:", min_distance)
    print("가장 먼 두 개의 가게:", farthest_stores, "거리:", max_distance)

if __name__ == "__main__":
    main()